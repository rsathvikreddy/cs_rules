rules:
  - id: tainted-path-traversal-openpyxl-django
    message: The application builds a file path from potentially untrusted data,
      which can lead to a path traversal vulnerability. An attacker can
      manipulate the path which the application uses to access files. If the
      application does not validate user input and sanitize file paths,
      sensitive files such as configuration or user data can be accessed,
      potentially creating or overwriting files. To prevent this vulnerability,
      validate and sanitize any input that is used to create references to file
      paths. Also, enforce strict file access controls. For example, choose
      privileges allowing public-facing applications to access only the required
      files.
    severity: ERROR
    metadata:
      likelihood: MEDIUM
      impact: HIGH
      confidence: HIGH
      category: security
      subcategory:
        - vuln
      cwe:
        - "CWE-22: Improper Limitation of a Pathname to a Restricted Directory
          ('Path Traversal')"
      cwe2020-top25: true
      cwe2021-top25: true
      cwe2022-top25: true
      functional-categories:
        - file::sink::file-access::openpyxl
        - web::source::cookie::django_rest_frameworkapi
        - web::source::form-data::django_rest_frameworkapi
        - web::source::header::django_rest_frameworkapi
        - web::source::http-body::django_rest_frameworkapi
        - web::source::http-params::django_rest_frameworkapi
        - web::source::url-path-params::django_rest_frameworkapi
      owasp:
        - A01:2021 - Broken Access Control
        - A05:2017 - Broken Access Control
      references:
        - https://docs.pyfilesystem.org/en/latest/guide.html#opening-filesystems
        - https://owasp.org/Top10/A01_2021-Broken_Access_Control
        - https://owasp.org/www-community/attacks/Path_Traversal
        - https://portswigger.net/web-security/file-path-traversal
        - https://www.stackhawk.com/blog/django-path-traversal-guide-examples-and-prevention/
      technology:
        - django_rest_frameworkapi
        - file
        - openpyxl
        - web
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - Path Traversal
    languages:
      - python
    mode: taint
    options:
      interfile: true
      symbolic_propagation: true
      taint_assume_safe_booleans: true
      taint_assume_safe_numbers: true
    pattern-sources:
      - label: __SOURCE__
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $DJANGO_REQUEST.query_params
                  - pattern: $DJANGO_REQUEST.stream
                  - pattern: $DJANGO_REQUEST.content_type
                  - pattern: $DJANGO_REQUEST.data
                  - pattern: $DJANGO_REQUEST.user_agent_string
                  - pattern: $DJANGO_REQUEST.user_agent
                  - pattern: $DJANGO_REQUEST.body
                  - pattern: $DJANGO_REQUEST.headers
                  - pattern: $DJANGO_REQUEST.path
                  - pattern: $DJANGO_REQUEST.path_info
                  - pattern: $DJANGO_REQUEST.META
                  - pattern: $DJANGO_REQUEST.REQUEST
                  - pattern: $DJANGO_REQUEST.GET
                  - pattern: $DJANGO_REQUEST.POST
                  - pattern: $DJANGO_REQUEST.FILES
                  - pattern: $DJANGO_REQUEST.DATA
                  - pattern: $DJANGO_REQUEST.QUERY_PARAMS
                  - pattern: $DJANGO_REQUEST.COOKIES
                  - pattern: $DJANGO_REQUEST.get_host()
                  - pattern: $DJANGO_REQUEST.get_full_path(...)
                  - pattern: $DJANGO_REQUEST.get_full_path_info(...)
                  - pattern: $DJANGO_REQUEST.get_raw_uri(...)
                  - pattern: $DJANGO_REQUEST.encoding(...)
                  - pattern: $DJANGO_REQUEST.body(...)
                  - pattern: $DJANGO_REQUEST.read(...)
                  - pattern: $DJANGO_REQUEST.readline()
                  - pattern: $DJANGO_REQUEST.readlines()
                  - pattern: $DJANGO_REQUEST.get_signed_cookie(...)
        requires: DJANGO_REQUEST
      - label: DJANGO_REQUEST
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: |
                      @rest_framework.decorators.api_view(...)
                      def $FUNC($DJANGO_REQUEST, ...):
                        ...
                  - patterns:
                      - pattern: |
                          class $CLS($PARENT_CLASS):
                              ...
                              def $FUNC(self, $DJANGO_REQUEST, ...):
                                ...
                      - metavariable-regex:
                          metavariable: $PARENT_CLASS
                          regex: ^rest_framework\.+
                      - metavariable-regex:
                          metavariable: $FUNC
                          regex: get|post|put|patch|delete|head|options|dispatch|initial|throttled|retrieve|update|partial_update|destroy|list|create
              - focus-metavariable: $DJANGO_REQUEST
    pattern-propagators:
      - from: $DEFAULT
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $DICT = { ... }
                      ...
                  - pattern-inside: |
                      $DICT = dict(...)
                      ...
              - pattern-either:
                  - pattern: $DICT.get($FIELD, $DEFAULT)
                  - pattern: $DICT.setdefault($KEY, $DEFAULT)
        to: $DICT
      - from: $FROM_DICT
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $TO_DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $TO_DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $TO_DICT = { ... }
                      ...
                  - pattern-inside: |
                      $TO_DICT = dict(...)
                      ...
                  - pattern-inside: |
                      $FROM_DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $FROM_DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $FROM_DICT = { ... }
                      ...
                  - pattern-inside: |
                      $FROM_DICT = dict(...)
                      ...
              - pattern-either:
                  - pattern: $TO_DICT.update($FROM_DICT)
                  - pattern: $TO_DICT | $FROM_DICT
                  - pattern: $TO_DICT |= $FROM_DICT
        to: $TO_DICT
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $LIST = [ ... ]
                      ...
                  - pattern-inside: |
                      $LIST = list(...)
                      ...
              - pattern-either:
                  - pattern: $LIST.append($FROM)
                  - pattern: $LIST.extend($FROM)
                  - pattern: $LIST.insert($INDEX, $FROM)
        to: $LIST
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $FROM.$LOG($SINK, ...)
                  - pattern: $FROM.$LOG(..., msg=$SINK, ...)
                  - pattern: $APP.logger.$LOG($SINK, ...)
              - metavariable-regex:
                  metavariable: $LOG
                  regex: ^(info|warning|error|critical|log|exception|handle)$
        to: $SINK
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $SET = { $ITEM, ... }
                      ...
                  - pattern-inside: |
                      $SET = set(...)
                      ...
                  - pattern-inside: |
                      $OTHERSET = { $ITEM, ... }
                      ...
                  - pattern-inside: |
                      $OTHERSET = set(...)
                      ...
              - pattern-either:
                  - pattern: $SET.update(..., $FROM, ...)
                  - pattern: $SET.intersection_update(..., $FROM, ...)
                  - pattern: $SET.difference_update(..., $FROM, ...)
                  - pattern: $SET.symmetric_difference_update(..., $FROM, ...)
                  - pattern: $SET.add($FROM)
                  - pattern: $SET |= $FROM
                  - pattern: $SET &= $FROM
                  - pattern: $SET -= $FROM
                  - pattern: $SET ^= $FROM
        to: $SET
      - from: $FORM
        patterns:
          - pattern: $FORM.populate_obj($OBJ)
        to: $OBJ
    pattern-sinks:
      - patterns:
          - pattern-either:
              - pattern: openpyxl.load_workbook($SINK, ...)
              - pattern: openpyxl.load_workbook(..., filename=$SINK, ...)
              - pattern: openpyxl.open($SINK, ...)
              - pattern: openpyxl.open(..., filename=$SINK, ...)
          - focus-metavariable: $SINK
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  class $CLS:
                    ...
                    $WB: openpyxl.Workbook
                    ...
              - pattern-inside: |
                  class $CLS:
                    ...
                    $WB: openpyxl.Workbook = ...
                    ...
              - pattern-inside: |
                  class $WB(..., openpyxl.Workbook, ...):
                    ...
                  ...
              - pattern-inside: |
                  def $FUN(..., $WB: openpyxl.Workbook, ...):
                    ...
              - pattern-inside: |
                  $WB: openpyxl.Workbook
                  ...
              - pattern-inside: |
                  $WB: openpyxl.Workbook = ...
                  ...
              - pattern-inside: |
                  if isinstance($WB, openpyxl.Workbook):
                    ...
              - pattern-inside: |
                  if isinstance($WB, (..., openpyxl.Workbook, ...)):
                    ...
              - pattern-inside: |
                  if type($WB) == openpyxl.Workbook:
                    ...
              - pattern-inside: |
                  class $CLS:
                    ...
                    $WB: openpyxl.workbook.Workbook
                    ...
              - pattern-inside: |
                  class $CLS:
                    ...
                    $WB: openpyxl.workbook.Workbook = ...
                    ...
              - pattern-inside: |
                  class $WB(..., openpyxl.workbook.Workbook, ...):
                    ...
                  ...
              - pattern-inside: |
                  def $FUN(..., $WB: openpyxl.workbook.Workbook, ...):
                    ...
              - pattern-inside: |
                  $WB: openpyxl.workbook.Workbook
                  ...
              - pattern-inside: |
                  $WB: openpyxl.workbook.Workbook = ...
                  ...
              - pattern-inside: |
                  if isinstance($WB, openpyxl.workbook.Workbook):
                    ...
              - pattern-inside: |
                  if isinstance($WB, (..., openpyxl.workbook.Workbook, ...)):
                    ...
              - pattern-inside: |
                  if type($WB) == openpyxl.workbook.Workbook:
                    ...
              - pattern-inside: |
                  class $CLS:
                    ...
                    $WB: openpyxl.workbook.workbook.Workbook
                    ...
              - pattern-inside: |
                  class $CLS:
                    ...
                    $WB: openpyxl.workbook.workbook.Workbook = ...
                    ...
              - pattern-inside: |
                  class $WB(..., openpyxl.workbook.workbook.Workbook, ...):
                    ...
                  ...
              - pattern-inside: |
                  def $FUN(..., $WB: openpyxl.workbook.workbook.Workbook, ...):
                    ...
              - pattern-inside: |
                  $WB: openpyxl.workbook.workbook.Workbook
                  ...
              - pattern-inside: |
                  $WB: openpyxl.workbook.workbook.Workbook = ...
                  ...
              - pattern-inside: |
                  if isinstance($WB, openpyxl.workbook.workbook.Workbook):
                    ...
              - pattern-inside: >
                  if isinstance($WB, (..., openpyxl.workbook.workbook.Workbook,
                  ...)):
                    ...
              - pattern-inside: |
                  if type($WB) == openpyxl.workbook.workbook.Workbook:
                    ...
              - pattern-inside: |
                  $WB = openpyxl.Workbook(...)
                  ...
              - pattern-inside: |
                  $WB = openpyxl.workbook.Workbook(...)
                  ...
              - pattern-inside: |
                  $WB = openpyxl.workbook.workbook.Workbook(...)
                  ...
              - pattern-inside: |
                  $WB = openpyxl.load_workbook(...)
                  ...
              - pattern-inside: |
                  $WB = openpyxl.open(...)
                  ...
          - pattern-either:
              - pattern: $WB.save($SINK, ...)
              - pattern: $WB.save(..., filename=$SINK, ...)
          - focus-metavariable: $SINK
    pattern-sanitizers:
      - patterns:
          - pattern-either:
              - pattern: int(...)
              - pattern: bool(...)
              - pattern: float(...)
              - pattern: complex(...)
              - pattern: oct(...)
              - pattern: hex(...)
              - pattern: bin(...)
              - pattern: round(...)
              - pattern: id(...)
              - pattern: hash(...)
              - pattern: len(...)
              - pattern: type(...)
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $DICT[$KEY]
                  ...
              - pattern-inside: |
                  $DICT = { $KEY: $VALUE for ... in ...}
                  ...
              - pattern-inside: |
                  $DICT.get($KEY, $DEFAULT)
                  ...
              - pattern-inside: |
                  $DICT = { }
                  ...
              - pattern-inside: |
                  $DICT = { $KEY: $VALUE, ... }
                  ...
              - pattern-inside: |
                  $DICT = dict(...)
                  ...
          - pattern-either:
              - pattern: $DICT.clear()
              - pattern: $DICT.len()
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $LIST = [ ... ]
                  ...
              - pattern-inside: |
                  $LIST = list(...)
                  ...
          - pattern-either:
              - pattern: $LIST.clear()
              - pattern: $LIST.count(...)
              - pattern: $LIST.index(...)
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $SET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $SET = set(...)
                  ...
          - pattern-either:
              - pattern: $SET.len()
              - pattern: $SET.clear()
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $SET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $SET = { $ITEM for ... in ...}
                  ...
              - pattern-inside: |
                  $SET = set(...)
                  ...
              - pattern-inside: |
                  $SET = frozenset(...)
                  ...
              - pattern-inside: |
                  $OTHERSET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $OTHERSET = set(...)
                  ...
          - pattern-either:
              - pattern: $SET.isdisjoint($OTHERSET)
              - pattern: $SET.difference($OTHERSET)
              - pattern: $SET.issubset($OTHERSET)
              - pattern: $SET < $OTHERSET
              - pattern: $SET <= $OTHERSET
              - pattern: $SET.issuperset($OTHERSET)
              - pattern: $SET > $OTHERSET
              - pattern: $SET >= $OTHERSET
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $TUPLE = ( $ITEM, ... )
                  ...
              - pattern-inside: |
                  $TUPLE = $ITEM, ...
                  ...
              - pattern-inside: |
                  $TUPLE = tuple(...)
                  ...
          - pattern-either:
              - pattern: $TUPLE.len()
      - patterns:
          - pattern: werkzeug.utils.secure_filename(...)
